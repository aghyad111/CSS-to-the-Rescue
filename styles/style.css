/* Using @layer for CSS organization */
@layer base, typography, room, controls, lamp, animations;

/* Base layer with custom properties for fundamental styles */
@layer base {
  /* Custom properties for colors and values */
  :root {
    --color-white: rgba(255, 255, 255, 0.9);
    --color-yellow: rgb(237, 230, 19); 
    --color-blue: rgba(0, 191, 255, 0.9);
    --color-wall: #f0e6d2;
    --color-floor: #8b5a2b;
    --color-text: #333;
    --color-control-bg: rgba(51, 51, 51, 0.7);
    --lamp-scale: 3;
    --transition-speed: 0.2s;
    --transition-long: 0.6s;
    --glow-white: 0 0 10px 3px rgba(234, 227, 227, 0.916);
    --glow-yellow: 0 0 10px 3px rgba(197, 222, 32, 0.7);
    --glow-blue: 0 0 10px 3px rgba(29, 162, 206, 0.7);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    :root {
      --lamp-scale: 2;
    }
  }

  @media (max-width: 480px) {
    :root {
      --lamp-scale: 1.5;
    }
  }

  body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
  }
}

/* Typography layer for fonts and text styling */
@layer typography {
  /* Apply font to all text elements */
  body {
    font-family: 'Raleway', sans-serif;
  }
  
  /* Simple title typography - positioned to the left */
  header {
    position: absolute;
    top: 10%;
    left: 5%;
    text-align: left;
    z-index: 10;
  }
  
  h1 {
    font-weight: 300;
    font-size: 2rem;
    color: #333;
    letter-spacing: 0.2em;
    text-transform: uppercase;
    margin: 0;
  }
  
  /* Control labels typography */
  label {
    font-weight: 500;
    font-size: 0.9rem;
    letter-spacing: 0.05em;
  }
}

/* Room environment styles */
@layer room {
  /* Room background with wall and floor - using CSS nesting */
  body {
    &::before, &::after {
      content: "";
      position: absolute;
      z-index: -1;
    }
    
    /* Wall */
    &::before {
      top: 0;
      left: 0;
      width: 100%;
      height: 70%;
      background-color: var(--color-wall);
      background-image: linear-gradient(90deg, 
        rgba(0,0,0,0.03) 0%, 
        rgba(0,0,0,0) 50%, 
        rgba(0,0,0,0.03) 100%
      );
    }
    
    /* Floor */
    &::after {
      bottom: 0;
      left: 0;
      width: 100%;
      height: 30%;
      background-color: var(--color-floor);
      background-image: repeating-linear-gradient(90deg, 
        rgba(0,0,0,0.1) 0px, 
        rgba(0,0,0,0.1) 2px, 
        transparent 2px, 
        transparent 20px
      );
    }
  }

  /* Wall-floor dividing line */
  hr {
    position: absolute;
    width: 100%;
    height: 2px;
    background-color: rgba(0,0,0,0.2);
    top: 70%;
    z-index: -1;
    border: none;
    margin: 0;
    padding: 0;
  }
}

@layer controls {
  /* Hide radio buttons */
  input[type="radio"] {
    position: absolute;
    opacity: 0;
  }

  /* Hide text but keep accessible for screen readers */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  /* Single class for controls as allowed by requirements - now positioned to the left */
  .controls {
    position: absolute;
    top: 20%;
    left: 5%;
    display: flex;
    flex-direction: column;
    gap: 15px;
    z-index: 10;
    padding: 8px 12px;
    border-radius: 4px;
    background-color: var(--color-control-bg);
    
    /* Nested styles for labels */
    & label {
      cursor: pointer;
      padding: 6px 12px;
      border: 1px solid #555;
      border-radius: 3px;
      transition: all var(--transition-speed);
      background-color: rgba(255, 255, 255, 0.8);
      color: var(--color-text);
      width: 80px;
      text-align: center;
      
      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 5px rgba(0,0,0,0.3);
      }
    }
    
    /* Off button styling */
    & label[for="off-light"] {
      background-color: #444;
      color: white;
      border-color: #222;
    }
  }

  /* Using sibling selectors with nesting */
  #off-light:checked ~ .controls {
    & label[for="off-light"] {
      background-color: #333;
      box-shadow: 0 0 5px rgba(0, 0, 0, 0.5), inset 0 0 10px rgba(0, 0, 0, 0.5);
      border-color: #111;
    }
  }

  #white-light:checked ~ .controls {
    & label[for="white-light"] {
      background-color: rgba(255, 255, 255, 0.95);
      box-shadow: 0 0 5px rgba(255, 255, 255, 0.7);
      border-color: white;
    }
  }

  #yellow-light:checked ~ .controls {
    & label[for="yellow-light"] {
      background-color: rgba(237, 230, 19, 0.3);
      box-shadow: 0 0 5px rgba(200, 255, 0, 0.7);
      border-color: #e5ff00;
    }
  }

  #blue-light:checked ~ .controls {
    & label[for="blue-light"] {
      background-color: rgba(0, 191, 255, 0.3);
      box-shadow: 0 0 5px rgba(0, 191, 255, 0.7);
      border-color: #00bfff;
    }
  }
}

@layer lamp {
  /* Lamp styling with child selectors and nesting */
  figure {
    transform: scale(var(--lamp-scale));
    position: relative;
    height: 50vh;
    width: 100%;
    
    /* Default light styles for the bulb and beams */
    & > div:nth-child(3),
    & > div:nth-child(5) > div {
      background: linear-gradient(to bottom, var(--color-white) 0%, transparent 100%);
      box-shadow: var(--glow-white);
      transition: background var(--transition-speed), box-shadow var(--transition-speed), opacity var(--transition-speed);
    }
    
    /* Lamp cable */
    & > div:nth-child(1) {
      position: fixed;
      top: 0;
      left: 50%;
      width: 2px;
      height: 155px;
      background-color: black;
      transform: translateX(-50%);
      z-index: 1;
    }
    
    /* Lamp connector */
    & > div:nth-child(2) {
      position: fixed;
      top: 155px;
      left: 50%;
      width: 20px;
      height: 10px;
      background-color: black;
      border-radius: 10px 10px 0 0;
      transform: translateX(-50%);
      z-index: 1;
    }
    
    /* Light bulb */
    & > div:nth-child(3) {
      position: fixed;
      top: 213px;
      left: 50%;
      width: 20px;
      height: 16px;
      background-color: white;
      border-radius: 50%;
      transform: translateX(-50%);
      z-index: 2;
      position: relative;
      overflow: hidden;
      
      &::before {
        content: "";
        position: absolute;
        top: 2px;
        left: 5px;
        width: 6px;
        height: 3px;
        background-color: rgba(255, 255, 255, 0.9);
        border-radius: 50%;
        transform: rotate(30deg);
      }
      
      &::after {
        content: "";
        position: absolute;
        top: 7px;
        left: 3px;
        width: 4px;
        height: 2px;
        background-color: rgba(255, 255, 255, 0.7);
        border-radius: 50%;
        transform: rotate(-15deg);
      }
    }
    
    /* Lamp shade */
    & > div:nth-child(4) {
      position: fixed;
      top: 160px;
      left: 50%;
      width: 120px;
      height: 60px;
      background-color: black;
      border-radius: 60px 60px 0 0;
      transform: translateX(-50%);
      z-index: 3;
    }
    
    /* Light beams container with nested beams */
    & > div:nth-child(5) {
      position: fixed;
      top: 225px;
      left: 50%;
      transform: translateX(-50%);
      z-index: 0;
      width: 480px;
      height: 400px;
      
      /* Center beam */
      & > div:nth-child(1) {
        position: absolute;
        top: -10px;
        left: 50%;
        transform: translateX(-50%);
        width: 100%;
        height: 100%;
        clip-path: polygon(48% 0, 52% 0, 65% 100%, 35% 100%);
        opacity: 0.9;
      }
      
      /* Inner left beam */
      & > div:nth-child(2) {
        position: absolute;
        top: -10px;
        left: 0;
        width: 100%;
        height: 100%;
        clip-path: polygon(42% 0, 48% 0, 35% 100%, 20% 100%);
        opacity: 0.7;
      }
      
      /* Inner right beam */
      & > div:nth-child(3) {
        position: absolute;
        top: -10px;
        left: 0;
        width: 100%;
        height: 100%;
        clip-path: polygon(52% 0, 58% 0, 80% 100%, 65% 100%);
        opacity: 0.7;
      }
      
      /* Outer left beam */
      & > div:nth-child(4) {
        position: absolute;
        top: -10px;
        left: 0;
        width: 100%;
        height: 100%;
        clip-path: polygon(38% 0, 42% 0, 20% 100%, 5% 100%);
        opacity: 0.5;
      }
      
      /* Outer right beam */
      & > div:nth-child(5) {
        position: absolute;
        top: -10px;
        left: 0;
        width: 100%;
        height: 100%;
        clip-path: polygon(58% 0, 62% 0, 95% 100%, 80% 100%);
        opacity: 0.5;
      }
    }
  }

  /* Light Color Change Styles with nesting and custom properties */
  #yellow-light:checked ~ figure {
    & > div:nth-child(3),
    & > div:nth-child(5) > div {
      background: linear-gradient(to bottom, var(--color-yellow) 0%, transparent 100%);
      box-shadow: var(--glow-yellow);
    }
    
    & > div:nth-child(3)::before, 
    & > div:nth-child(3)::after {
      background-color: rgba(255, 255, 255, 0.95);
    }
  }

  #blue-light:checked ~ figure {
    & > div:nth-child(3),
    & > div:nth-child(5) > div {
      background: linear-gradient(to bottom, var(--color-blue) 0%, transparent 100%);
      box-shadow: var(--glow-blue);
    }
    
    & > div:nth-child(3)::before, 
    & > div:nth-child(3)::after {
      background-color: rgba(255, 255, 255, 0.95);
    }
  }
  
  /* Light Off Style */
  #off-light:checked ~ figure {
    & > div:nth-child(3) {
      background: radial-gradient(circle at center, rgba(220, 220, 220, 0.8) 0%, rgba(180, 180, 180, 0.6) 100%);
      box-shadow: none;
      border: 1px solid rgba(200, 200, 200, 0.5);
      
      &::before, &::after {
        opacity: 0.3;
      }
    }
    
    & > div:nth-child(5) > div {
      opacity: 0;
    }
  }
  
  /* Container query for advanced responsive behavior */
  @container (max-width: 600px) {
    figure {
      transform: scale(calc(var(--lamp-scale) * 0.8));
    }
  }
}

/* Animations layer for movement and transitions */
@layer animations {
  
  /* Gentle sway animation */
  @keyframes sway {
    0%, 100% { transform: translateX(-50%) rotate(0deg); }
    25% { transform: translateX(-50%) rotate(1deg); }
    75% { transform: translateX(-50%) rotate(-1deg); }
  }

  
  figure:hover > div:nth-child(4) {
    animation: sway 3s ease-in-out;
  }
  
}

